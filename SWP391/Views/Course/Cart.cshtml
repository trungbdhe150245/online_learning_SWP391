@model SWP391.Controllers.Products<Course>
@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, AuthoringTagHelpers
@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_Layout";
    ViewData["Title"] = "CART";
}

@{
    string cart;
    var session = HttpContextAccessor.HttpContext.Session;
    string jsoncart = session.GetString(SWP391.Controllers.CourseController.CARTKEY);
    if (jsoncart != null)
    {
        cart = JsonConvert.DeserializeObject<List<Course>>(jsoncart).Count.ToString();

    }
    else
    {
        cart = "0";
    }
}



<div class="page-content bg-white">
    <div class="breadcrumb-row">
        <div class="container">
            <ul class="list-inline">
                <li><a href="#">Home</a></li>
                <li>Cart</li>
            </ul>
        </div>
    </div>
    <div class="container">
        <div class="section-area section-sp1">
            <div class="row d-flex flex-row-reverse">
                <div class="col-lg-3 col-md-4 col-sm-12 m-b30">


                    <section>
                        <div class="bt-drop-in-wrapper">
                            <div id="bt-dropin"></div>
                        </div>
                    </section>

                </div>
                <div class="col-lg-9 col-md-8 col-sm-12">
                    <div class="content-block">

                        @{ double total = 0;
                            var index = 0;}
                        <h2 style="text-align:center">@ViewData["Title"]</h2>
                        <div class="container">
                            <form id="payment-form" method="post" asp-controller="Course" asp-action="CheckoutCourse">
                                @Html.HiddenFor(n => n.Id)

                                <div class="row">
                                    <table class="table">
                                        <thead class="thead-dark">
                                            <tr>
                                                <th scope="col">#</th>
                                                <th scope="col">Course</th>
                                                <th scope="col">Price</th>
                                                <th scope="col">Action</th>
                                            </tr>
                                        </thead>
                                        @if (Model != null)
                                        {
                                            @foreach (var course in Model.products)
                                            {
                                                total += course.Price;
                                                <tr>
                                                    <td>@(index++)</td>
                                                    <td>@(course.Title)</td>
                                                    <td>@(course.Price.ToString())$</td>
                                                    <td>
                                                        <a asp-route="Removecart" asp-route-courseId="@course.CourseId"
                                                           class="btn btn-danger">Remove Entry</a>
                                                        <a asp-controller="Course" asp-action="CourseDetail" asp-route-id="@course.CourseId"
                                                           class="btn btn-danger">Go To Course</a>
                                                    </td>

                                                </tr>
                                                <input asp-for="@Model.Ids[Model.products.IndexOf(course)]" value="@course.CourseId" hidden />
                                            }
                                        }
                                    </table>
                                    @Html.HiddenFor(n => n.Nonce, new { @id = "nonce" })

                                    <div class="btn-group" role="group" aria-label="Basic example">
                                        @if (!cart.Equals("0"))
                                        {

                                            <input asp-for="@Model.Price" value="@total.ToString()" hidden />
                                            <button type="submit" class="btn btn-secondary">Purchase @(total.ToString())$</button>
                                        }
                                        <a asp-controller="Course" asp-action="ClearCart" class="btn btn-secondary" style="background-color:red;">Empty cart</a>
                                        <a asp-controller="Course" asp-action="CourseList" class="btn btn-secondary" style="background-color:Highlight;">Continue shopping</a>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
          $(document).ready(function () {
              $(".updatecartitem").click(function (event) {
                  event.preventDefault();
                  var productid = $(this).attr("data-productid");
                  var quantity = $("#quantity-" + productid).val();
                  $.ajax({
                      type: "POST",
                      url:"@Url.RouteUrl("updatecart")",
                      data: {
                          productid: productid,
                          quantity:quantity
                      },
                      success: function (result) {
                          window.location.href = "@Url.RouteUrl("cart")";
                      }
                  });
              });
          });
    </script>
}

<script src="https://js.braintreegateway.com/web/dropin/1.22.0/js/dropin.min.js"></script>
<script>
    var client_token = "@ViewBag.ClientToken";
    var form = document.querySelector('#payment-form');

    braintree.dropin.create({
        authorization: client_token,
        container: '#bt-dropin'
    }, function (createErr, instance) {
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            instance.requestPaymentMethod(function (err, payload) {
                if (err) {
                    return;
                }

                document.querySelector('#nonce').value = payload.nonce;
                form.submit();
            });
        });
    });
</script>
